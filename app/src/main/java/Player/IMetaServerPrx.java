// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `server.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package Player;

public interface IMetaServerPrx extends Ice.ObjectPrx
{
    public MediaInfo[] find(String s);

    public MediaInfo[] find(String s, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_find(String s);

    public Ice.AsyncResult begin_find(String s, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_find(String s, Ice.Callback __cb);

    public Ice.AsyncResult begin_find(String s, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_find(String s, Callback_IMetaServer_find __cb);

    public Ice.AsyncResult begin_find(String s, java.util.Map<String, String> __ctx, Callback_IMetaServer_find __cb);

    public MediaInfo[] end_find(Ice.AsyncResult __result);

    public MediaInfo[] findByArtist(String s);

    public MediaInfo[] findByArtist(String s, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_findByArtist(String s);

    public Ice.AsyncResult begin_findByArtist(String s, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_findByArtist(String s, Ice.Callback __cb);

    public Ice.AsyncResult begin_findByArtist(String s, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_findByArtist(String s, Callback_IMetaServer_findByArtist __cb);

    public Ice.AsyncResult begin_findByArtist(String s, java.util.Map<String, String> __ctx, Callback_IMetaServer_findByArtist __cb);

    public MediaInfo[] end_findByArtist(Ice.AsyncResult __result);

    public MediaInfo[] findByTitle(String s);

    public MediaInfo[] findByTitle(String s, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_findByTitle(String s);

    public Ice.AsyncResult begin_findByTitle(String s, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_findByTitle(String s, Ice.Callback __cb);

    public Ice.AsyncResult begin_findByTitle(String s, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_findByTitle(String s, Callback_IMetaServer_findByTitle __cb);

    public Ice.AsyncResult begin_findByTitle(String s, java.util.Map<String, String> __ctx, Callback_IMetaServer_findByTitle __cb);

    public MediaInfo[] end_findByTitle(Ice.AsyncResult __result);

    public MediaInfo[] listSongs();

    public MediaInfo[] listSongs(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_listSongs();

    public Ice.AsyncResult begin_listSongs(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_listSongs(Ice.Callback __cb);

    public Ice.AsyncResult begin_listSongs(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_listSongs(Callback_IMetaServer_listSongs __cb);

    public Ice.AsyncResult begin_listSongs(java.util.Map<String, String> __ctx, Callback_IMetaServer_listSongs __cb);

    public MediaInfo[] end_listSongs(Ice.AsyncResult __result);

    public MusicServerInfo[] listMusicServers();

    public MusicServerInfo[] listMusicServers(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_listMusicServers();

    public Ice.AsyncResult begin_listMusicServers(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_listMusicServers(Ice.Callback __cb);

    public Ice.AsyncResult begin_listMusicServers(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_listMusicServers(Callback_IMetaServer_listMusicServers __cb);

    public Ice.AsyncResult begin_listMusicServers(java.util.Map<String, String> __ctx, Callback_IMetaServer_listMusicServers __cb);

    public MusicServerInfo[] end_listMusicServers(Ice.AsyncResult __result);

    public StreamToken setupStreaming(MediaInfo media);

    public StreamToken setupStreaming(MediaInfo media, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_setupStreaming(MediaInfo media);

    public Ice.AsyncResult begin_setupStreaming(MediaInfo media, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_setupStreaming(MediaInfo media, Ice.Callback __cb);

    public Ice.AsyncResult begin_setupStreaming(MediaInfo media, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_setupStreaming(MediaInfo media, Callback_IMetaServer_setupStreaming __cb);

    public Ice.AsyncResult begin_setupStreaming(MediaInfo media, java.util.Map<String, String> __ctx, Callback_IMetaServer_setupStreaming __cb);

    public StreamToken end_setupStreaming(Ice.AsyncResult __result);
}
