// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `server.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package Player;

public class StreamToken implements java.lang.Cloneable, java.io.Serializable
{
    public String endpointStr;

    public String libvlcMediaName;

    public String streamingURL;

    public StreamToken()
    {
    }

    public StreamToken(String endpointStr, String libvlcMediaName, String streamingURL)
    {
        this.endpointStr = endpointStr;
        this.libvlcMediaName = libvlcMediaName;
        this.streamingURL = streamingURL;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        StreamToken _r = null;
        if(rhs instanceof StreamToken)
        {
            _r = (StreamToken)rhs;
        }

        if(_r != null)
        {
            if(endpointStr != _r.endpointStr)
            {
                if(endpointStr == null || _r.endpointStr == null || !endpointStr.equals(_r.endpointStr))
                {
                    return false;
                }
            }
            if(libvlcMediaName != _r.libvlcMediaName)
            {
                if(libvlcMediaName == null || _r.libvlcMediaName == null || !libvlcMediaName.equals(_r.libvlcMediaName))
                {
                    return false;
                }
            }
            if(streamingURL != _r.streamingURL)
            {
                if(streamingURL == null || _r.streamingURL == null || !streamingURL.equals(_r.streamingURL))
                {
                    return false;
                }
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::Player::StreamToken");
        __h = IceInternal.HashUtil.hashAdd(__h, endpointStr);
        __h = IceInternal.HashUtil.hashAdd(__h, libvlcMediaName);
        __h = IceInternal.HashUtil.hashAdd(__h, streamingURL);
        return __h;
    }

    public java.lang.Object
    clone()
    {
        java.lang.Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeString(endpointStr);
        __os.writeString(libvlcMediaName);
        __os.writeString(streamingURL);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        endpointStr = __is.readString();
        libvlcMediaName = __is.readString();
        streamingURL = __is.readString();
    }

    public static final long serialVersionUID = -2727099432876259836L;
}
