// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `server.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package Player;

public class MusicServerInfo implements java.lang.Cloneable, java.io.Serializable
{
    public String endpointStr;

    public String hostname;

    public short listeningPort;

    public short streamingPort;

    public MusicServerInfo()
    {
    }

    public MusicServerInfo(String endpointStr, String hostname, short listeningPort, short streamingPort)
    {
        this.endpointStr = endpointStr;
        this.hostname = hostname;
        this.listeningPort = listeningPort;
        this.streamingPort = streamingPort;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        MusicServerInfo _r = null;
        if(rhs instanceof MusicServerInfo)
        {
            _r = (MusicServerInfo)rhs;
        }

        if(_r != null)
        {
            if(endpointStr != _r.endpointStr)
            {
                if(endpointStr == null || _r.endpointStr == null || !endpointStr.equals(_r.endpointStr))
                {
                    return false;
                }
            }
            if(hostname != _r.hostname)
            {
                if(hostname == null || _r.hostname == null || !hostname.equals(_r.hostname))
                {
                    return false;
                }
            }
            if(listeningPort != _r.listeningPort)
            {
                return false;
            }
            if(streamingPort != _r.streamingPort)
            {
                return false;
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::Player::MusicServerInfo");
        __h = IceInternal.HashUtil.hashAdd(__h, endpointStr);
        __h = IceInternal.HashUtil.hashAdd(__h, hostname);
        __h = IceInternal.HashUtil.hashAdd(__h, listeningPort);
        __h = IceInternal.HashUtil.hashAdd(__h, streamingPort);
        return __h;
    }

    public java.lang.Object
    clone()
    {
        java.lang.Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeString(endpointStr);
        __os.writeString(hostname);
        __os.writeShort(listeningPort);
        __os.writeShort(streamingPort);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        endpointStr = __is.readString();
        hostname = __is.readString();
        listeningPort = __is.readShort();
        streamingPort = __is.readShort();
    }

    public static final long serialVersionUID = 7344687666027897238L;
}
